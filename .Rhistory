theme(axis.text.x = element_text(angle = 45, hjust=1))
covid_age_2 <- covid_age %>%
mutate(death_rate = `COVID-19 Deaths` / total)
## SE for p based on the binomial distribution model
p_binom_se = function(n,p)
{
return ( sqrt( p*(1-p)/n) )
}
## CI for p using point estimate, se, and normal approximation
p_norm_ci = function(est, se, conf=0.95)
{
z = qnorm(1 - (1 - conf)/2)
ci = est + c(-1,1)*z*se
return( ci )
}
## CI for Agresti-Coull
p_agresti_ci = function(n, x, conf=0.95)
{
p_tilde = (x+2)/(n+4)
se = p_binom_se(n+4, p_tilde)
ci = p_norm_ci(p_tilde, se, conf)
return( ci )
}
covid_age_3 <- covid_age_2 %>%
mutate(p_tilde = (`COVID-19 Deaths` + 2) / (total + 4),
zscore1 = qnorm(0.025),
zscore2 = qnorm(0.975),
se = sqrt(p_tilde*(1-p_tilde)/(total + 4)),
ci95_1 = p_tilde + zscore1 * se,
ci95_2 = p_tilde + zscore2 * se)
ggplot(covid_age_3) +
geom_col(aes(x = `Age group`, y = death_rate, fill = `Age group`)) +
geom_point(aes(x = `Age group`, y = p_tilde)) +
geom_segment(aes(x = `Age group`, xend = `Age group`, y = ci95_1, yend = ci95_2), size = 1.0) +
ylab("covid-19 death rate") +
ggtitle("COVID-19 death rate (COVID-19 death number) / (population)\nfor different age group with Agresti-Coull 95% percent confidence \ninterval") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
covid_age_3 <- covid_age_3 %>%
select(`Age group`, "death_rate", ci95_1, ci95_2) %>%
mutate(death_rate = format(death_rate, scientific = FALSE),
ci95_1 = format(ci95_1, scientific = FALSE),
ci95_2 = format(ci95_2, scientific = FALSE),) %>%
rename("95%_conf_intvl_1" =ci95_1,
"95%_conf_intvl_2" =ci95_2,
"p_tilde" = death_rate)
covid_age_3
covid_age_4 <- covid_age %>%
mutate(p_0 = sum(`COVID-19 Deaths`)/sum(total)) %>%
mutate(phat = `COVID-19 Deaths` / total) %>%
mutate(log_L0 = dbinom(`COVID-19 Deaths`,total,p_0,log=TRUE),
log_L1 = dbinom(`COVID-19 Deaths`,total,phat,log=TRUE))
lrt = covid_age_4 %>%
summarize(ln_L0 = sum(log_L0),
ln_L1 = sum(log_L1),
lrt = 2*(ln_L1 - ln_L0),
R = exp(ln_L0-ln_L1))
lrt = lrt %>%
mutate(p_value = 1 - pchisq(lrt,6)) %>%
select(-R)
lrt
total_death = sum(pull(covid_sex["COVID-19 Deaths"]))
covid_sex_1 <- covid_sex %>%
mutate(proportion = `COVID-19 Deaths` / total_death)
ggplot(covid_sex_1, aes(x = Sex, y = proportion, fill = Sex)) +
geom_col() +
ylab("Proportion of total death") +
ggtitle("Proportion of total death for each sex group")
covid_sex_2 <- covid_sex %>%
mutate(death_rate = `COVID-19 Deaths` / total)
covid_sex_3 <- covid_sex_2 %>%
mutate(p_tilde = (`COVID-19 Deaths` + 2) / (total + 4),
zscore1 = qnorm(0.025),
zscore2 = qnorm(0.975),
se = sqrt(p_tilde*(1-p_tilde)/(total + 4)),
ci95_1 = p_tilde + zscore1 * se,
ci95_2 = p_tilde + zscore2 * se)
ggplot(covid_sex_3) +
geom_col(aes(x = Sex, y = death_rate, fill = Sex)) +
geom_point(aes(x = Sex, y = p_tilde)) +
geom_segment(aes(x = Sex, xend = Sex, y = ci95_1, yend = ci95_2), size = 1.0) +
ylab("covid-19 death rate") +
ggtitle("COVID-19 death rate for different sex group")
covid_sex_3 <- covid_sex_3 %>%
select(`Sex`, "death_rate", ci95_1, ci95_2) %>%
mutate(death_rate = format(death_rate, scientific = FALSE),
ci95_1 = format(ci95_1, scientific = FALSE),
ci95_2 = format(ci95_2, scientific = FALSE),) %>%
rename("95%_conf_intvl_1" =ci95_1,
"95%_conf_intvl_2" =ci95_2,
"p_tilde" = death_rate)
covid_sex_3
covid_sex_4 <- covid_sex %>%
mutate(p_0 = sum(`COVID-19 Deaths`)/sum(total)) %>%
mutate(phat = `COVID-19 Deaths` / total) %>%
mutate(log_L0 = dbinom(`COVID-19 Deaths`,total,p_0,log=TRUE),
log_L1 = dbinom(`COVID-19 Deaths`,total,phat,log=TRUE))
lrt = covid_sex_4 %>%
summarize(ln_L0 = sum(log_L0),
ln_L1 = sum(log_L1),
lrt = 2*(ln_L1 - ln_L0),
R = exp(log_L0-log_L1))
lrt = lrt %>%
mutate(p_value = 1 - pchisq(lrt,1)) %>%
select(-R)
lrt
covid_age_sex1 <- covid_age_sex %>%
mutate(sexdeath_proportion = `COVID-19 Deaths` / total_sex) %>%
mutate(agedeath_proportion = `COVID-19 Deaths` / total_age) %>%
mutate(death_rate = `COVID-19 Deaths` / total)
ggplot(covid_age_sex1, aes(x = `Age group`, y = sexdeath_proportion, fill = `Age group`)) +
geom_col() +
ylab("Proportion of total death\nwithin different sex groups") +
facet_wrap(~Sex) +
ggtitle("Proportion of total death for each age group\nwithin different sex groups") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
ggplot(covid_age_sex1, aes(x = Sex, y = agedeath_proportion, fill = Sex)) +
geom_col() +
ylab("Proportion of total death\nwithin different age groups") +
facet_wrap(~`Age group`) +
ggtitle("Proportion of total death for each sex group\nwithin different age groups") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
age_sex3 <- age_sex %>%
mutate(`%_of_total_male` = total_male / sum(total_male),
`%_of_total_female` = total_female / sum(total_female),
`%_of_total` = total / sum(total))
age_sex3 %>%
print(width = Inf)
ggplot(covid_age_sex1, aes(x = `Age group`, y = death_rate, fill = `Age group`)) +
geom_col() +
ylab("COVID-19 death rate") +
facet_wrap(~`Sex`) +
ggtitle("COVID-19 death rate of different age groups with different sexes") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
covid_age_sex2 <- covid_age_sex1 %>%
filter(`Age group` == "0-17 years" | `Age group` == "18-29 years" | `Age group` == "30-49 years")
ggplot(covid_age_sex2, aes(x = `Sex`, y = death_rate, fill = `Sex`)) +
geom_col() +
ylab("COVID-19 death rate") +
facet_wrap(~`Age group`) +
ggtitle("COVID-19 death rate of different sex groups\n within different age groups (under 49 years old)") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
covid_age_sex3 <- covid_age_sex1 %>%
filter(`Age group` == "50-64 years" | `Age group` == "65-74 years" | `Age group` == "75-84 years" | `Age group` == "85 years and over")
ggplot(covid_age_sex3, aes(x = `Sex`, y = death_rate, fill = `Sex`)) +
geom_col() +
ylab("COVID-19 death rate") +
facet_wrap(~`Age group`) +
ggtitle("COVID-19 death rate of different sex groups\n within different age groups (above 49 years old)") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
# reading in data and data transformation
state = read_csv("csvData.csv")
state[1,"State"] = "District of Columbia" #Washington DC is equivalent to                                                #District of Columbia
covid_state <- covid_raw %>%
filter(State != "United States") %>%
filter(State != "New York City") %>%
filter(Sex == "All Sexes") %>%
filter(`Age group` == "All Ages")
covid_state = left_join(covid_state, state)
covid_state <- covid_state %>%
select(State, `COVID-19 Deaths`, Density, Pop) %>%
mutate(death_rate = `COVID-19 Deaths` / Pop)
correlation = covid_state %>%
summarize(r = cor(Density, death_rate))
title = with(correlation, paste("correlation =", round(r,3)))
title = paste("Linear regression model of population density and covid-19\ndeath rate for states in United states (Washington DC included)\nwith ", title)
ggplot(covid_state, aes(x = Density, y = death_rate)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)+
ylab("covid-19 death rate") +
ggtitle(title)
extract_lm = function(x)
{
out = as_tibble(coef(summary(x)), rownames = "parameter") %>%
rename(estimate = Estimate,
standard_error = `Std. Error`,
t_value = `t value`,
p_value = `Pr(>|t|)`)
return ( out )
}
fit = lm(death_rate ~ Density, data = covid_state)
table1 = extract_lm(fit)
table1 <- table1 %>%
filter(parameter == "Density")
table1[1,"parameter"] = "Density(slope)"
table1
covid_state2 <- covid_state[-c(9),]
correlation2 = covid_state2 %>%
summarize(r = cor(Density, death_rate))
title2 = with(correlation2, paste("correlation =", round(r,3)))
title2 = paste("Linear regression model of population density and covid-19\ndeath rate for states in United states (Washington DC not included)\nwith ", title2)
ggplot(covid_state2, aes(x = Density, y = death_rate)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)+
ylab("covid-19 death rate") +
ggtitle(title2)
fit2 = lm(death_rate ~ Density, data = covid_state2)
table2 = extract_lm(fit2)
table2 <- table2 %>%
filter(parameter == "Density")
table2[1,"parameter"] = "Density(slope)"
table2
covid_sex_4 <- covid_sex %>%
mutate(p_0 = sum(`COVID-19 Deaths`)/sum(total)) %>%
mutate(phat = `COVID-19 Deaths` / total) %>%
mutate(log_L0 = dbinom(`COVID-19 Deaths`,total,p_0,log=TRUE),
log_L1 = dbinom(`COVID-19 Deaths`,total,phat,log=TRUE))
lrt = covid_sex_4 %>%
summarize(ln_L0 = sum(log_L0),
ln_L1 = sum(log_L1),
lrt = 2*(ln_L1 - ln_L0),
R = exp(ln_L0-ln_L1))
lrt = lrt %>%
mutate(p_value = 1 - pchisq(lrt,1)) %>%
select(-R)
lrt
covid_sex_4 <- covid_sex %>%
mutate(p_0 = sum(`COVID-19 Deaths`)/sum(total)) %>%
mutate(phat = `COVID-19 Deaths` / total) %>%
mutate(log_L0 = dbinom(`COVID-19 Deaths`,total,p_0,log=TRUE),
log_L1 = dbinom(`COVID-19 Deaths`,total,phat,log=TRUE))
lrt = covid_sex_4 %>%
summarize(ln_L0 = sum(log_L0),
ln_L1 = sum(log_L1),
lrt = 2*(ln_L1 - ln_L0),
R = exp(ln_L0-ln_L1))
lrt = lrt %>%
mutate(p_value = 1 - pchisq(lrt,1)) %>%
select(-R)
lrt
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(lubridate)
source("viridis.R")
source("ggprob.R")
#read in data
covid_raw = read_csv("Provisional_COVID-19_Death_Counts_by_Sex__Age__and_State.csv")
age_sex_raw = read_csv("nc-est2019-alldata-r-file22.csv")
#data transformation
age_sex_raw <- age_sex_raw %>%
filter(MONTH == 10)
age_sex <- age_sex_raw %>%
filter(AGE < 999) %>%
mutate(age_group = case_when(AGE >= 0 & AGE <= 17 ~ "0-17 years",
AGE >= 18 & AGE <= 29 ~ "18-29 years",
AGE >= 30 & AGE <= 49 ~ "30-49 years",
AGE >= 50 & AGE <= 64 ~ "50-64 years",
AGE >= 65 & AGE <= 74 ~ "65-74 years",
AGE >= 75 & AGE <= 84 ~ "75-84 years",
AGE >= 85 & AGE < 999~ "85 years and over")) %>%
group_by(age_group) %>%
summarize(total = sum(TOT_POP),
total_male = sum(TOT_MALE),
total_female = sum(TOT_FEMALE)) %>%
rename(`Age group` = age_group)
age <- age_sex %>%
select(`Age group`, total)
sex <- age_sex %>%
summarize(Male = sum(total_male),
Female = sum(total_female))
covid_age <- covid_raw %>%
filter(State == "United States") %>%
filter(`Age group` == "0-17 years" | `Age group` == "18-29 years" | `Age group` == "30-49 years" | `Age group` == "50-64 years" | `Age group` == "65-74 years" | `Age group` == "75-84 years" | `Age group` == "85 years and over") %>%
filter(Sex == "All Sexes") %>%
select(`Age group`,`COVID-19 Deaths`) %>%
drop_na()
covid_age = left_join(covid_age,age)
#The focus of this project will be restricted to male and female only
covid_sex <- covid_raw %>%
filter(State == "United States") %>%
filter(`Age group` == "All Ages") %>%
filter(Sex == "Male" | Sex == "Female") %>%
select(Sex,`COVID-19 Deaths`) %>%
drop_na() %>%
mutate(total = 0)
for(i in 1:2){
if(covid_sex[i,"Sex"] == "Male"){
covid_sex[i,"total"] = pull(sex[1,"Male"])
}
if(covid_sex[i,"Sex"] == "Female"){
covid_sex[i,"total"] = pull(sex[1,"Female"])
}
}
age_sex2 <- age_sex %>%
rename(Male = total_male) %>%
rename(Female = total_female) %>%
rename(`All Sexes` = total) %>%
pivot_longer(c(`All Sexes`,`Male`,`Female`),names_to = "Sex", values_to = "total")
covid_age_sex <- covid_raw %>%
filter(State == "United States") %>%
filter(Sex != "Unknown") %>%
filter(`Age group` == "0-17 years" | `Age group` == "18-29 years" | `Age group` == "30-49 years" | `Age group` == "50-64 years" | `Age group` == "65-74 years" | `Age group` == "75-84 years" | `Age group` == "85 years and over") %>%
select(`Sex`,`Age group`,`COVID-19 Deaths`) %>%
drop_na()
covid_age_sex = left_join(covid_age_sex,age_sex2)
covid_age_sex <- covid_age_sex %>%
filter(Sex != "All Sexes")
covid_age2 <- covid_age %>%
rename(total_age = `COVID-19 Deaths`) %>%
select(-total)
covid_age_sex = left_join(covid_age_sex,covid_age2)
covid_sex2 <- covid_sex %>%
rename(total_sex = `COVID-19 Deaths`) %>%
select(-total)
covid_age_sex = left_join(covid_age_sex,covid_sex2)
total_death = sum(pull(covid_age["COVID-19 Deaths"]))
covid_age_1 <- covid_age %>%
mutate(proportion = `COVID-19 Deaths` / total_death)
ggplot(covid_age_1, aes(x = `Age group`, y = proportion, fill = `Age group`)) +
geom_col() +
ylab("Proportion of total death") +
ggtitle("Proportion of total death for each age group") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
covid_age_2 <- covid_age %>%
mutate(death_rate = `COVID-19 Deaths` / total)
## SE for p based on the binomial distribution model
p_binom_se = function(n,p)
{
return ( sqrt( p*(1-p)/n) )
}
## CI for p using point estimate, se, and normal approximation
p_norm_ci = function(est, se, conf=0.95)
{
z = qnorm(1 - (1 - conf)/2)
ci = est + c(-1,1)*z*se
return( ci )
}
## CI for Agresti-Coull
p_agresti_ci = function(n, x, conf=0.95)
{
p_tilde = (x+2)/(n+4)
se = p_binom_se(n+4, p_tilde)
ci = p_norm_ci(p_tilde, se, conf)
return( ci )
}
covid_age_3 <- covid_age_2 %>%
mutate(p_tilde = (`COVID-19 Deaths` + 2) / (total + 4),
zscore1 = qnorm(0.025),
zscore2 = qnorm(0.975),
se = sqrt(p_tilde*(1-p_tilde)/(total + 4)),
ci95_1 = p_tilde + zscore1 * se,
ci95_2 = p_tilde + zscore2 * se)
ggplot(covid_age_3) +
geom_col(aes(x = `Age group`, y = death_rate, fill = `Age group`)) +
geom_point(aes(x = `Age group`, y = p_tilde)) +
geom_segment(aes(x = `Age group`, xend = `Age group`, y = ci95_1, yend = ci95_2), size = 1.0) +
ylab("covid-19 death rate") +
ggtitle("COVID-19 death rate (COVID-19 death number) / (population)\nfor different age group with Agresti-Coull 95% percent confidence \ninterval") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
covid_age_3 <- covid_age_3 %>%
select(`Age group`, "death_rate", ci95_1, ci95_2) %>%
mutate(death_rate = format(death_rate, scientific = FALSE),
ci95_1 = format(ci95_1, scientific = FALSE),
ci95_2 = format(ci95_2, scientific = FALSE),) %>%
rename("95%_conf_intvl_1" =ci95_1,
"95%_conf_intvl_2" =ci95_2,
"p_tilde" = death_rate)
covid_age_3
covid_age_4 <- covid_age %>%
mutate(p_0 = sum(`COVID-19 Deaths`)/sum(total)) %>%
mutate(phat = `COVID-19 Deaths` / total) %>%
mutate(log_L0 = dbinom(`COVID-19 Deaths`,total,p_0,log=TRUE),
log_L1 = dbinom(`COVID-19 Deaths`,total,phat,log=TRUE))
lrt = covid_age_4 %>%
summarize(ln_L0 = sum(log_L0),
ln_L1 = sum(log_L1),
lrt = 2*(ln_L1 - ln_L0),
R = exp(ln_L0-ln_L1))
lrt = lrt %>%
mutate(p_value = 1 - pchisq(lrt,6)) %>%
select(-R)
lrt
total_death = sum(pull(covid_sex["COVID-19 Deaths"]))
covid_sex_1 <- covid_sex %>%
mutate(proportion = `COVID-19 Deaths` / total_death)
ggplot(covid_sex_1, aes(x = Sex, y = proportion, fill = Sex)) +
geom_col() +
ylab("Proportion of total death") +
ggtitle("Proportion of total death for each sex group")
covid_sex_2 <- covid_sex %>%
mutate(death_rate = `COVID-19 Deaths` / total)
covid_sex_3 <- covid_sex_2 %>%
mutate(p_tilde = (`COVID-19 Deaths` + 2) / (total + 4),
zscore1 = qnorm(0.025),
zscore2 = qnorm(0.975),
se = sqrt(p_tilde*(1-p_tilde)/(total + 4)),
ci95_1 = p_tilde + zscore1 * se,
ci95_2 = p_tilde + zscore2 * se)
ggplot(covid_sex_3) +
geom_col(aes(x = Sex, y = death_rate, fill = Sex)) +
geom_point(aes(x = Sex, y = p_tilde)) +
geom_segment(aes(x = Sex, xend = Sex, y = ci95_1, yend = ci95_2), size = 1.0) +
ylab("covid-19 death rate") +
ggtitle("COVID-19 death rate for different sex group")
covid_sex_3 <- covid_sex_3 %>%
select(`Sex`, "death_rate", ci95_1, ci95_2) %>%
mutate(death_rate = format(death_rate, scientific = FALSE),
ci95_1 = format(ci95_1, scientific = FALSE),
ci95_2 = format(ci95_2, scientific = FALSE),) %>%
rename("95%_conf_intvl_1" =ci95_1,
"95%_conf_intvl_2" =ci95_2,
"p_tilde" = death_rate)
covid_sex_3
covid_sex_4 <- covid_sex %>%
mutate(p_0 = sum(`COVID-19 Deaths`)/sum(total)) %>%
mutate(phat = `COVID-19 Deaths` / total) %>%
mutate(log_L0 = dbinom(`COVID-19 Deaths`,total,p_0,log=TRUE),
log_L1 = dbinom(`COVID-19 Deaths`,total,phat,log=TRUE))
lrt = covid_sex_4 %>%
summarize(ln_L0 = sum(log_L0),
ln_L1 = sum(log_L1),
lrt = 2*(ln_L1 - ln_L0),
R = exp(ln_L0-ln_L1))
lrt = lrt %>%
mutate(p_value = 1 - pchisq(lrt,1)) %>%
select(-R)
lrt
covid_age_sex1 <- covid_age_sex %>%
mutate(sexdeath_proportion = `COVID-19 Deaths` / total_sex) %>%
mutate(agedeath_proportion = `COVID-19 Deaths` / total_age) %>%
mutate(death_rate = `COVID-19 Deaths` / total)
ggplot(covid_age_sex1, aes(x = `Age group`, y = sexdeath_proportion, fill = `Age group`)) +
geom_col() +
ylab("Proportion of total death\nwithin different sex groups") +
facet_wrap(~Sex) +
ggtitle("Proportion of total death for each age group\nwithin different sex groups") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
ggplot(covid_age_sex1, aes(x = Sex, y = agedeath_proportion, fill = Sex)) +
geom_col() +
ylab("Proportion of total death\nwithin different age groups") +
facet_wrap(~`Age group`) +
ggtitle("Proportion of total death for each sex group\nwithin different age groups") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
age_sex3 <- age_sex %>%
mutate(`%_of_total_male` = total_male / sum(total_male),
`%_of_total_female` = total_female / sum(total_female),
`%_of_total` = total / sum(total))
age_sex3 %>%
print(width = Inf)
ggplot(covid_age_sex1, aes(x = `Age group`, y = death_rate, fill = `Age group`)) +
geom_col() +
ylab("COVID-19 death rate") +
facet_wrap(~`Sex`) +
ggtitle("COVID-19 death rate of different age groups with different sexes") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
covid_age_sex2 <- covid_age_sex1 %>%
filter(`Age group` == "0-17 years" | `Age group` == "18-29 years" | `Age group` == "30-49 years")
ggplot(covid_age_sex2, aes(x = `Sex`, y = death_rate, fill = `Sex`)) +
geom_col() +
ylab("COVID-19 death rate") +
facet_wrap(~`Age group`) +
ggtitle("COVID-19 death rate of different sex groups\n within different age groups (under 49 years old)") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
covid_age_sex3 <- covid_age_sex1 %>%
filter(`Age group` == "50-64 years" | `Age group` == "65-74 years" | `Age group` == "75-84 years" | `Age group` == "85 years and over")
ggplot(covid_age_sex3, aes(x = `Sex`, y = death_rate, fill = `Sex`)) +
geom_col() +
ylab("COVID-19 death rate") +
facet_wrap(~`Age group`) +
ggtitle("COVID-19 death rate of different sex groups\n within different age groups (above 49 years old)") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
# reading in data and data transformation
state = read_csv("csvData.csv")
state[1,"State"] = "District of Columbia" #Washington DC is equivalent to                                                #District of Columbia
covid_state <- covid_raw %>%
filter(State != "United States") %>%
filter(State != "New York City") %>%
filter(Sex == "All Sexes") %>%
filter(`Age group` == "All Ages")
covid_state = left_join(covid_state, state)
covid_state <- covid_state %>%
select(State, `COVID-19 Deaths`, Density, Pop) %>%
mutate(death_rate = `COVID-19 Deaths` / Pop)
correlation = covid_state %>%
summarize(r = cor(Density, death_rate))
title = with(correlation, paste("correlation =", round(r,3)))
title = paste("Linear regression model of population density and covid-19\ndeath rate for states in United states (Washington DC included)\nwith ", title)
ggplot(covid_state, aes(x = Density, y = death_rate)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)+
ylab("covid-19 death rate") +
ggtitle(title)
extract_lm = function(x)
{
out = as_tibble(coef(summary(x)), rownames = "parameter") %>%
rename(estimate = Estimate,
standard_error = `Std. Error`,
t_value = `t value`,
p_value = `Pr(>|t|)`)
return ( out )
}
fit = lm(death_rate ~ Density, data = covid_state)
table1 = extract_lm(fit)
table1 <- table1 %>%
filter(parameter == "Density")
table1[1,"parameter"] = "Density(slope)"
table1
covid_state2 <- covid_state[-c(9),]
correlation2 = covid_state2 %>%
summarize(r = cor(Density, death_rate))
title2 = with(correlation2, paste("correlation =", round(r,3)))
title2 = paste("Linear regression model of population density and covid-19\ndeath rate for states in United states (Washington DC not included)\nwith ", title2)
ggplot(covid_state2, aes(x = Density, y = death_rate)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)+
ylab("covid-19 death rate") +
ggtitle(title2)
fit2 = lm(death_rate ~ Density, data = covid_state2)
table2 = extract_lm(fit2)
table2 <- table2 %>%
filter(parameter == "Density")
table2[1,"parameter"] = "Density(slope)"
table2
